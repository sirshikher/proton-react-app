"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.desktopSize = desktopSize;
exports.TextInputElement = exports.TextElement = exports.AppElement = exports.PickerElement = exports.ViewElement = exports.WindowElement = exports.ImageElement = void 0;

var _nodeQtNapi = _interopRequireDefault(require("node-qt-napi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function desktopSize() {
  return _nodeQtNapi["default"].desktopSize();
}

var BaseElement =
/*#__PURE__*/
function () {
  function BaseElement() {
    _classCallCheck(this, BaseElement);
  }

  _createClass(BaseElement, [{
    key: "mousePressEvent",
    value: function mousePressEvent(func) {
      this.element.mousePressEvent(func);
    }
  }, {
    key: "mouseReleaseEvent",
    value: function mouseReleaseEvent(func) {
      this.element.mouseReleaseEvent(func);
    }
  }, {
    key: "setStyleSheet",
    value: function setStyleSheet(obj) {
      this.element.setStyleSheet(obj);
    }
  }, {
    key: "setParent",
    value: function setParent(elem) {
      //console.log("Set parent", this.element, elem.element);
      this.element.setParent(elem.element);
    }
  }, {
    key: "del",
    value: function del() {
      this.element.del();
    }
  }, {
    key: "resize",
    value: function resize(width, height) {
      this.element.resize(width, height);
    }
  }, {
    key: "move",
    value: function move(left, top) {
      this.element.move(left, top);
    }
  }, {
    key: "minSize",
    value: function minSize() {
      return this.element.minimumSizeHint();
    }
  }, {
    key: "show",
    value: function show() {
      this.element.show();
    }
  }, {
    key: "close",
    value: function close() {
      this.element.close();
    }
  }, {
    key: "width",
    value: function width() {
      return this.element.width();
    }
  }, {
    key: "height",
    value: function height() {
      return this.element.height();
    }
  }]);

  return BaseElement;
}();

var ImageElement =
/*#__PURE__*/
function (_BaseElement) {
  _inherits(ImageElement, _BaseElement);

  function ImageElement() {
    var _this;

    _classCallCheck(this, ImageElement);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageElement).call(this));
    _this.element = new _nodeQtNapi["default"].QLabel();

    _this.element.setScaledContents(false);

    _this.pixElement = new _nodeQtNapi["default"].QPixmap();
    return _this;
  }

  _createClass(ImageElement, [{
    key: "setFromData",
    value: function setFromData(data) {
      this.pixElement.loadFromData(data);
      this.element.setPixmap(this.pixElement);
    }
  }, {
    key: "setFromUri",
    value: function setFromUri(uri) {
      this.pixElement.load(uri);
      this.element.setPixmap(this.pixElement);
    }
  }, {
    key: "scaleImage",
    value: function scaleImage(width, height, mode) {
      this.element.setAlignment(_nodeQtNapi["default"].Alignment.AlignLeft | _nodeQtNapi["default"].Alignment.AlignVCenter);

      if (mode == 'cover') {
        this.pixElement.scaled(width, height, _nodeQtNapi["default"].AspectRatioMode.KeepAspectRatioByExpanding);
      } else if (mode == 'contain') {
        this.pixElement.scaled(width, height, _nodeQtNapi["default"].AspectRatioMode.KeepAspectRatio);
      } else if (mode == 'stretch') {
        this.pixElement.scaled(width, height, _nodeQtNapi["default"].AspectRatioMode.IgnoreAspectRatio);
      } else if (mode == 'center') {
        this.element.setAlignment(_nodeQtNapi["default"].Alignment.AlignCenter);
        this.pixElement.scaled(width, height, _nodeQtNapi["default"].AspectRatioMode.KeepAspectRatio);
      } else if (mode == 'repeat') {
        this.pixElement.scaledTile(width, height);
      }

      this.element.setPixmap(this.pixElement);
      this.element.show();
      this.element.adjustSize();
    }
  }, {
    key: "isNull",
    value: function isNull() {
      return this.pixElement.isNull();
    }
  }]);

  return ImageElement;
}(BaseElement);

exports.ImageElement = ImageElement;

var WindowElement =
/*#__PURE__*/
function (_BaseElement2) {
  _inherits(WindowElement, _BaseElement2);

  function WindowElement() {
    var _this2;

    _classCallCheck(this, WindowElement);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(WindowElement).call(this));
    _this2.element = new _nodeQtNapi["default"].QMainWindow();
    return _this2;
  }

  _createClass(WindowElement, [{
    key: "resizeEvent",
    value: function resizeEvent(func) {
      this.element.resizeEvent(func);
    }
  }, {
    key: "getClosed",
    value: function getClosed() {
      return this.element.getClosed();
    }
  }]);

  return WindowElement;
}(BaseElement);

exports.WindowElement = WindowElement;

var ViewElement =
/*#__PURE__*/
function (_BaseElement3) {
  _inherits(ViewElement, _BaseElement3);

  function ViewElement() {
    var _this3;

    _classCallCheck(this, ViewElement);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ViewElement).call(this));
    _this3.element = new _nodeQtNapi["default"].QWidget();
    return _this3;
  }

  return ViewElement;
}(BaseElement);

exports.ViewElement = ViewElement;

var PickerElement =
/*#__PURE__*/
function (_BaseElement4) {
  _inherits(PickerElement, _BaseElement4);

  function PickerElement() {
    var _this4;

    _classCallCheck(this, PickerElement);

    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(PickerElement).call(this));
    _this4.element = new _nodeQtNapi["default"].QComboBox();
    return _this4;
  }

  _createClass(PickerElement, [{
    key: "activatedEvent",
    value: function activatedEvent(func) {
      return this.element.activatedEvent(func);
    }
  }, {
    key: "addItem",
    value: function addItem(label) {
      this.element.addItem(label);
    }
  }, {
    key: "removeItem",
    value: function removeItem(index) {
      this.element.removeItem(index);
    }
  }, {
    key: "insertItem",
    value: function insertItem(index, label) {
      this.element.insertItem(index, label);
    }
  }, {
    key: "setCurrentText",
    value: function setCurrentText(label) {
      this.element.setCurrentText(label);
    }
  }, {
    key: "currentIndex",
    value: function currentIndex() {
      return this.element.currentIndex();
    }
  }]);

  return PickerElement;
}(BaseElement);

exports.PickerElement = PickerElement;

var AppElement =
/*#__PURE__*/
function () {
  function AppElement() {
    _classCallCheck(this, AppElement);

    this.element = new _nodeQtNapi["default"].QApplication();
  }

  _createClass(AppElement, [{
    key: "runLoop",
    value: function runLoop() {
      this.element.sendPostedEvents();
      this.element.processEvents();
    }
  }]);

  return AppElement;
}();

exports.AppElement = AppElement;

var TextElement =
/*#__PURE__*/
function (_BaseElement5) {
  _inherits(TextElement, _BaseElement5);

  function TextElement() {
    var _this5;

    _classCallCheck(this, TextElement);

    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(TextElement).call(this));
    _this5.element = new _nodeQtNapi["default"].QLabel();
    return _this5;
  }

  _createClass(TextElement, [{
    key: "setText",
    value: function setText(text) {
      this.element.setText(text);
    }
  }]);

  return TextElement;
}(BaseElement);

exports.TextElement = TextElement;

var TextInputElement =
/*#__PURE__*/
function (_BaseElement6) {
  _inherits(TextInputElement, _BaseElement6);

  function TextInputElement(multi) {
    var _this6;

    _classCallCheck(this, TextInputElement);

    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(TextInputElement).call(this));
    _this6.element = multi ? new _nodeQtNapi["default"].QPlainTextEdit() : new _nodeQtNapi["default"].QLineEdit();
    return _this6;
  }

  _createClass(TextInputElement, [{
    key: "textChangedEvent",
    value: function textChangedEvent(func) {
      this.element.textChangedEvent(func);
    }
  }, {
    key: "setText",
    value: function setText(text) {
      this.element.setText(text);
    }
  }]);

  return TextInputElement;
}(BaseElement);

exports.TextInputElement = TextInputElement;