"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _propChecker = _interopRequireDefault(require("../utils/propChecker"));

var _devtools = require("../devtools");

var _Container = require("./Container");

var _qt = require("../backends/qt");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var _default = function _default(props) {
  var propTypes = {};
  var defaultProps = {};
  var element = new _qt.AppElement();
  props = (0, _propChecker["default"])(props, propTypes, defaultProps, 'Root');
  var containerProps = (0, _Container.Container)(function () {}, function () {});

  var quit = function quit() {
    for (var i = 0; i < containerProps.children[0].children.length; i++) {
      containerProps.children[0].children[i].element.close();
    }

    (0, _devtools.disconnectDevtools)();
  };

  var interval = setInterval(function () {
    for (var i = 0; i < containerProps.children[0].children.length; i++) {
      var closed = containerProps.children[0].children[i].element.getClosed();

      if (!closed) {
        element.runLoop();
        return;
      }
    }

    quit();
    clearInterval(interval);
  }, 1); // fix this

  var traverseYoga = function traverseYoga(host) {
    var queue = [host];

    while (queue.length) {
      var next = queue.pop();

      if (next && next.applyYoga) {
        var root = true;

        if (next.parent && next.parent.applyYoga) {
          root = false;
        } else if (typeof next.parent.element == 'undefined' || typeof next.parent.element.height == 'undefined') {
          root = {
            h: next.element.height(),
            w: next.element.width()
          };
        } else {
          root = {
            h: next.parent.element.height(),
            w: next.parent.element.width()
          };
        }

        next.applyYoga(root, function () {
          return traverseYoga(host);
        });
      } // if (next && next.type == 'fullText' && next.element.adjustSize) {
      //   next.element.adjustSize();
      // }


      if (next && next.children) queue.push.apply(queue, _toConsumableArray(next.children));
    }
  };

  var afterCommit = function afterCommit(host) {
    traverseYoga(host);
  };

  return _objectSpread({}, containerProps, {
    element: element,
    afterCommit: afterCommit,
    interval: interval,
    quit: quit
  });
};

exports["default"] = _default;